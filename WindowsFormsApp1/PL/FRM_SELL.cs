using System;
using System.Collections.Generic;
using System.ComponentModel; 
using System.Data; 
using System.Drawing; 
using System.Linq; 
using System.Text; 
using System.Threading.Tasks;
using System.Windows.Forms; 
using System.Data.Entity; // استيراد مكتبة Entity Framework للعمل مع قاعدة البيانات
using WindowsFormsApp1.EPL; // استيراد مسار النماذج والكلاسات المخصصة للتطبيق

namespace WindowsFormsApp1.PL 
{
    public partial class FRM_SELL : Form 
    {
        DB_SMPEntities db = new DB_SMPEntities(); // إنشاء كائن للاتصال بقاعدة البيانات
     //   TB_PUR tb_pur = new TB_PUR();
        TB_SELL tb_sell = new TB_SELL();
        BL.Methods methods = new BL.Methods();

        public int id; 

        public FRM_SELL()
        {
            InitializeComponent(); // استدعاء دالة تهيئة واجهة المستخدم


            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            WindowsFormsApp1.DB_SMPEntities dbContext = new WindowsFormsApp1.DB_SMPEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_SELL.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext.TB_SELL.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        } // نهاية تعريف الدالة الرئيسية

        private void simpleButton3_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton4_Click(object sender, EventArgs e) 
        {

        }

        private void btn_add_Click(object sender, EventArgs e)
        {
            PL.FRM_SELL_ADD frm_add = new PL.FRM_SELL_ADD(); 
            frm_add.id = 0;
            frm_add.btn_add.Text = "اضافة";
           
            frm_add.Show();

        } // نهاية تعريف الدالة


        // بداية تعريف الدالة المرتبطة بزرار تحديث البيانات
        private void btn_update_Click(object sender, EventArgs e)
        {
            edt_search.Text = "بحث";
            edt_search.ForeColor = Color.Gray;
            update_data(); // استدعاء دالة تحديث البيانات
        } // نهاية تعريف الدالة

        private void btn_delete_Click(object sender, EventArgs e) // بداية تعريف الدالة المرتبطة بزرار حذف مورد
        {
            Toast toast = new Toast(); 
            Dialog dialog = new Dialog();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("ID")); 

            if (id > 0)
            {

                try // بداية تعريف كتلة للتعامل مع الأخطاء الممكنة
                {

                    var result = MessageBox.Show("عملية حذف", "هل تريد حذف عملية الشراء ",
                        MessageBoxButtons.YesNo, MessageBoxIcon.Question); // عرض مربع حوار للتأكيد على الحذف
                    if (result == DialogResult.Yes) 
                    {
                        tb_sell = db.TB_SELL.Where(x => x.ID == id).FirstOrDefault(); // البحث عن العنصر المحدد في قاعدة البيانات
                        db.Entry(tb_sell).State = EntityState.Deleted;
                        db.SaveChanges(); // حفظ التغييرات في قاعدة البيانات
                        
                        toast.lbl_caption.Text = "تمت عملية الحذف بنجاح"; 
                        toast.Show(); 
                        update_data(); 
                    }
                    else 
                    {
                        toast.lbl_caption.Text = "تم إلغاء عملية الحذف"; 
                        toast.Show();
                    }
                }
                catch
                {
                    dialog.txt_caption.Text = "لا توجد عملية بيع للحذف ";
                    dialog.Width = this.Width;
                    dialog.Show();
                }
            }
            else
            {
                dialog.txt_caption.Text = "لا توجد عملية شراء للحذف ";
                dialog.Width = this.Width;
                dialog.Show();
            }
           

        } // نهاية تعريف الدالة

        private void update_data() // بداية تعريف دالة تحديث البيانات في الجدول
        {
            db = new DB_SMPEntities(); 
            gridControl1.DataSource = db.TB_SELL.ToList(); // تحميل البيانات الجديدة في الجدول
            
        } // نهاية تعريف الدالة




        private void btn_edit_Click(object sender, EventArgs e) // بداية تعريف الدالة المرتبطة بزرار تعديل 
        {

            
            PL.FRM_SELL_ADD frm_add1 = new PL.FRM_SELL_ADD();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("ID")); 
            tb_sell = db.TB_SELL.Where(x => x.ID == id).FirstOrDefault();

           
            frm_add1.edt_name.Text = tb_sell.Sell_Name;
            frm_add1.edt_cus.Text = tb_sell.Sell_Cus;
            frm_add1.edt_sell.Text = tb_sell.Sell_price.ToString();
            frm_add1.edt_qt.Text = tb_sell.Sell_Qt.ToString();

            frm_add1.id = id; // تعيين معرف المورد المحدد
            frm_add1.btn_add.Text = "تعديل"; // تعيين نص الزر إلى "تعديل"
            frm_add1.Show(); // فتح نموذج التعديل
        } // نهاية تعريف الدالة

        private void btn_search_Click(object sender, EventArgs e)
        {
            var _search = edt_search.Text;
            // نقوم بفلتر جلب البيانات بشكل مباشر  
            gridControl1.DataSource = db.TB_SELL.Where(x => x.Sell_Name.Contains(_search)).ToList();
        }

        private void edt_search_TextChanged(object sender, EventArgs e)
        {
            PerformSearch();
        }

      

       

        private void edt_search_Enter(object sender, EventArgs e)
        {
            if(edt_search.Text == "بحث")
            {
                edt_search.Text = "";
                edt_search.ForeColor = Color.Black;
            }
        }

        private void edt_search_Leave(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(edt_search.Text))
            {
                edt_search.Text = "بحث";
                edt_search.ForeColor = Color.Gray;
                gridControl1.DataSource = db.TB_SELL.ToList();
            }
        }

        private void PerformSearch()
        {
            var _search = edt_search.Text;
            // نقوم بفلتر جلب البيانات بشكل مباشر  
            gridControl1.DataSource = db.TB_SELL
                .Where(x => x.Sell_Cus.Contains(_search) || x.Sell_Date.ToString().Contains(_search) || x.Sell_Name.Contains(_search) || x.Sell_price.ToString().Contains(_search) || x.Sell_Qt.ToString().Contains(_search) || x.Sell_Tprice.ToString().Contains(_search))
                .ToList();
        }
    }
}
